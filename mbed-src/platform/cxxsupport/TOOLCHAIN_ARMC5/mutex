/* mbed Microcontroller Library
 * Copyright (c) 2019 ARM Limited
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef __mutex
#define __mutex

// Just go straight to the main file - we also need IAR implementation, so do it there
#include <mstd_mutex>

// And then pull it all into our std
namespace std {
using mstd::defer_lock;
using mstd::defer_lock_t;
using mstd::try_to_lock;
using mstd::try_to_lock_t;
using mstd::adopt_lock;
using mstd::adopt_lock_t;

using mstd::lock_guard;
using mstd::unique_lock;
using mstd::scoped_lock;
using mstd::try_lock;
using mstd::lock;

using mstd::once_flag;
using mstd::call_once;

using mstd::mutex;
using mstd::recursive_mutex;
}

#endif /* __mutex */
